#!/usr/bin/python3
import subprocess
import argparse
import json
from pathlib import Path
import os


YT_DLP = ["yt-dlp", "--cookies-from-browser=firefox"]
MPV = [
    "mpv",
    "--ytdl-raw-options=cookies-from-browser=firefox",
    "--ytdl-raw-options-append=sub-langs=all,-danmaku",
]
POSTSCRIPT = Path.home() / "scripts" / "bin" / "bilibili_danmuku_process.py"


def main(args):
    if "space.bilibili.com" in args.url:
        entries = subprocess.run(
            YT_DLP + ["--flat-playlist", "-J", args.url],
            stdout=subprocess.PIPE,
            check=True,
            text=True,
        ).stdout
        entries = json.loads(entries)["entries"]
        print("Found a playlist with", len(entries), "entries")
        for entry in entries:
            url = entry["url"]
            assert "space.bilibili.com" not in url, "prevent infinite loop"
            print("Playing", url)
            subprocess.run(
                ["mpv-bili", url]
            )
        exit(0)
    print("Getting video info...")
    formats = subprocess.run(
        YT_DLP + ["-J", args.url],
        stdout=subprocess.PIPE,
        check=True,
        text=True,
    ).stdout
    formats = json.loads(formats)
    requested_formats = formats.get("requested_formats")
    if requested_formats is None:
        # multiple parts video?
        requested_formats = formats["entries"][0]["requested_formats"]
    width = None
    height = None
    for i in requested_formats:
        if i.get("width") and i.get("height"):
            width = i["width"]
            height = i["height"]
            break
    assert width and height

    print("Download subtitles and convert...")
    output = subprocess.run(
        YT_DLP
        + ["--skip-download", "--sub-langs", "danmaku", "--write-subs", args.url],
        check=True,
        cwd="/tmp/",
        text=True,
        stdout=subprocess.PIPE,
    ).stdout.splitlines()
    filename = None
    for i in output:
        if i.startswith("[info] Writing video subtitles to:"):
            filename = i.removeprefix("[info] Writing video subtitles to:").strip()
            break
    assert filename
    xml_path = Path("/tmp/") / filename
    ass_path = xml_path.with_suffix(".ass")

    print("Processing danmuku file to ass...")
    with open(ass_path, "w") as f:
        subprocess.run(
            [str(POSTSCRIPT), str(xml_path), str(width), str(height)],
            check=True,
            text=True,
            stdout=f,
        )

    print("Done, let mpv play it...")
    # Play it finally...
    os.execvp(
        "mpv",
        MPV + [f"--sub-file={ass_path}", args.url],
    )


if __name__ == "__main__":
    parser = argparse.ArgumentParser("mpv-bili")
    parser.add_argument("url", type=str)
    args = parser.parse_args()
    # Check if starts with "av" or "bv"
    url_lower = args.url.lower()
    if url_lower.startswith("av") or url_lower.startswith("bv"):
        args.url = "https://www.bilibili.com/video/" + args.url
    if "space.bilibili.com" in args.url:
        # Convert lists?sid=xxx -> lists/xxx
        args.url = args.url.replace("?sid=", "/")
    main(args)
